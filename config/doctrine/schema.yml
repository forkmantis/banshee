Play:
  connection: lastfm
  options:
    symfony: 
      filter: false
  columns:
    track_id:
    artist: { type: text }
    name: { type: text }
    album: { type: text }
    gmt_date: { type: integer }
    status: { type: enum, length: 8, values: ['Updated', 'No Match', 'Banshee'] }
  indexes:
    uq_plays:
      type: unique
      fields: [track_id, gmt_date]

CorePlaylists:
  connection: doctrine
  options:
    symfony:
      form: false
      filter: false
  tableName: CorePlaylists
  columns:
    PrimarySourceID: integer
    PlaylistID: { type: integer, primary: true }
    Name: { type: text, notnull: true }
    SortColumn: { type: integer, notnull: true, default: -1 }
    SortType: { type: integer, notnull: true, default: 0 }
    Special: { type: integer, notnull: true, default: 0 }
    CachedCount: integer
    IsTemporary: { type: integer, default: 0 }
  relations:
    Entries: { type: many, local: PlaylistID, foreign: PlaylistID, class: CorePlaylistEntries }

CorePlaylistEntries:
  connection: doctrine
  options:
    symfony:
      form: false
      filter: false
  tableName: CorePlaylistEntries
  columns:
    EntryID: { type: integer, primary: true }
    PlaylistID: { type: integer, notnull: true }
    TrackID: { type: integer, notnull: true }
    ViewOrder: { type: integer, notnull: true, default: 0 }
    Generated: { type: integer, notnull: true, default: 0 }
  relations:
    Playlist: { type: one, local: PlaylistID, foreign: PlaylistID, class: CorePlaylists }
    Track: { type: one, local: TrackID, foreign: TrackID, class: CoreTracks }

CoreArtists:
  connection: doctrine
  options:
    symfony:
      filter: false
  tableName: CoreArtists
  columns:
    ArtistID: { type: integer, primary: true }
    TagSetID: integer
    MusicBrainzID: text
    Name: text
    NameLowered: text
    Rating: integer
    NameSort: text
    NameSortKey: blob

CoreAlbums:
  connection: doctrine
  options:
    symfony:
      filter: false
  tableName: CoreAlbums
  columns:
    AlbumID: { type: integer, primary: true }
    ArtistID: { type: integer }
    TagSetID: { type: integer }
    MusicBrainzID: text
    Title: { type: text, notnull: true }
    TitleLowered: { type: text, notnull: true }
    ReleaseDate: integer
    Duration: integer
    Year: integer
    IsCompilation: integer
    ArtistName: text
    ArtistNameLowered: text
    Rating: integer
    ArtistNameSort: text
    TitleSort: text
    ArtistNameSortKey: blob
    TitleSortKey: blob

CoreTracks:
  connection: doctrine
  options:
    symfony:
      filter: false
  tableName: CoreTracks
  columns:
    PrimarySourceID: { type: integer, notnull: true }
    TrackID: { type: integer, primary: true }
    ArtistID: { type: integer }
    AlbumID: { type: integer }
    TagSetID: { type: integer }
    ExternalID: { type: integer }
    MusicBrainzID: { type: text }
    Uri: { type: text }
    UriType: { type: integer }
    MimeType: { type: text }
    FileSize: { type: integer }
    BitRate: { type: integer }
    Attributes: { type: integer, default: 5 }
    LastStreamError: { type: integer, default: 0 }
    Title: { type: text }
    TitleLowered: { type: text }
    TrackNumber: { type: integer }
    TrackCount: { type: integer }
    Disc: { type: integer }
    DiscCount: { type: integer }
    Duration: { type: integer }
    Year: { type: integer }
    Genre: { type: text }
    Composer: { type: text }
    Conductor: { type: text }
    Grouping: { type: text }
    Copyright: { type: text }
    LicenseUri: { type: text }
    Comment: { type: text }
    Rating: { type: integer }
    PlayCount: { type: integer }
    SkipCount: { type: integer }
    LastPlayedStamp: { type: integer }
    LastSkippedStamp: { type: integer }
    DateAddedStamp: { type: integer }
    DateUpdatedStamp: { type: integer }
    MetadataHash: { type: text }
    BPM: { type: integer }
    LastSyncedStamp: { type: integer }
    FileModifiedStamp: { type: integer }
  relations:
    Album: { local: AlbumID, foreign: AlbumID, class: CoreAlbums, foreignType: one }
    Artist: { local: ArtistID, foreign: ArtistID, class: CoreArtists, foreignType: one }
  indexes:
    uq_tracks:
      type: unique
      fields: [ArtistID, AlbumID, PrimarySourceID, Disc, TrackNumber, Uri]
    idx_size_duration:
      fields: [FileSize, Duration]
    idx_external_id:
      fields: [PrimarySourceID, ExternalID]
    idx_uri:
      fields: [PrimarySourceID, Uri]
    idx_cover_art:
      fields: [PrimarySourceID, AlbumID, DateUpdatedStamp]
